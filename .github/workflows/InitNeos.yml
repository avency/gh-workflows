name: InitNeos

on:
  workflow_call:
    inputs:
      containername:
        required: true
        type: string
      url:
        required: true
        type: string
    secrets:
      HOST:
        required: true
      USERNAME:
        required: true
      AVENCY_SSH_KEY:
        required: true

jobs:
  init:
    runs-on: ubuntu-latest

    steps:
      - name: Check HTTP status
        uses: gerdemann/http-status-code@1.0.0
        with:
          url: ${{ inputs.url }}
          code: 200
          timeout: 60
          interval: 10
          
      - name: Clear cache and warmup cache
        uses: appleboy/ssh-action@c732d38392bd59adadcb5e688fb1f7f1d29c6951
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AVENCY_SSH_KEY }}
          timeout: 60
          script: |
            phpContainerID=$(docker ps -aqf "name=${{ inputs.containername }}")
            docker exec $phpContainerID su -c "/data/flow flow:cache:flush && /data/flow flow:cache:warmup" -s /bin/sh www-data
            if [ $? != 0 ]
            then
               exit 1
            fi
            
      - name: Migrate database
        uses: appleboy/ssh-action@c732d38392bd59adadcb5e688fb1f7f1d29c6951
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AVENCY_SSH_KEY }}
          timeout: 300
          script: |
            phpContainerID=$(docker ps -aqf "name=${{ inputs.containername }}")
            docker exec $phpContainerID su -c "/data/flow doctrine:migrate" -s /bin/sh www-data
            if [ $? != 0 ]
            then
               exit 1
            fi
      - name: Publish resources
        uses: appleboy/ssh-action@c732d38392bd59adadcb5e688fb1f7f1d29c6951
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AVENCY_SSH_KEY }}
          timeout: 300
          script: |
            phpContainerID=$(docker ps -aqf "name=${{ inputs.containername }}")
            docker exec $phpContainerID su -c "/data/flow flow:resource:publish --collection static" -s /bin/sh www-data
            if [ $? != 0 ]
            then
               exit 1
            fi
