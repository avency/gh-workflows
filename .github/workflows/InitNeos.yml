name: InitNeos

on:
  workflow_call:
    inputs:
      containername:
        required: true
        type: string
      url:
        required: true
        type: string
      exec_clear_cache_warmup:
        default: true
        required: false
        type: boolean
      exec_migrate_database:
        default: true
        required: false
        type: boolean
      exec_publish_resource:
        default: true
        required: false
        type: boolean
      exec_command_migration:
        default: false
        required: false
        type: boolean
      exec_elasticsearch_index:
        default: false
        required: false
        type: boolean
      exec_elasticsearch_queue:
        default: false
        required: false
        type: boolean
    secrets:
      HOST:
        required: true
      USERNAME:
        required: true
      AVENCY_SSH_KEY:
        required: true
      BASIC_AUTH_USERNAME:
        required: false
      BASIC_AUTH_PASSWORD:
        required: false
jobs:
  init:
    runs-on: ubuntu-latest

    steps:
      - name: Check HTTP status
        uses: gerdemann/http-status-code@main
        with:
          url: ${{ inputs.url }}
          code: 200
          timeout: 60
          interval: 10
          username: ${{ secrets.BASIC_AUTH_USERNAME }}
          password: ${{ secrets.BASIC_AUTH_PASSWORD }}
          
      - name: Clear cache and warmup cache
        if: ${{ inputs.exec_clear_cache_warmup }}
        uses: appleboy/ssh-action@c732d38392bd59adadcb5e688fb1f7f1d29c6951
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AVENCY_SSH_KEY }}
          timeout: 120s
          script: |
            phpContainerID=$(docker ps -aqf "name=${{ inputs.containername }}")
            docker exec $phpContainerID su -c "/data/flow flow:cache:flush && /data/flow flow:cache:warmup" -s /bin/sh www-data
            if [ $? != 0 ]
            then
               exit 1
            fi
            
      - name: Migrate database
        if: ${{ inputs.exec_migrate_database }}
        uses: appleboy/ssh-action@c732d38392bd59adadcb5e688fb1f7f1d29c6951
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AVENCY_SSH_KEY }}
          timeout: 120s
          script: |
            phpContainerID=$(docker ps -aqf "name=${{ inputs.containername }}")
            docker exec $phpContainerID su -c "/data/flow doctrine:migrate" -s /bin/sh www-data
            if [ $? != 0 ]
            then
               exit 1
            fi
      - name: Publish resources
        if: ${{ inputs.exec_publish_resource }}
        uses: appleboy/ssh-action@c732d38392bd59adadcb5e688fb1f7f1d29c6951
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AVENCY_SSH_KEY }}
          timeout: 120s
          script: |
            phpContainerID=$(docker ps -aqf "name=${{ inputs.containername }}")
            docker exec $phpContainerID su -c "/data/flow flow:resource:publish --collection static" -s /bin/sh www-data
            if [ $? != 0 ]
            then
               exit 1
            fi
      - name: Execute Command Migrations
        if: ${{ inputs.exec_command_migration }}
        uses: appleboy/ssh-action@c732d38392bd59adadcb5e688fb1f7f1d29c6951
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AVENCY_SSH_KEY }}
          timeout: 120s
          script: |
            phpContainerID=$(docker ps -aqf "name=${{ inputs.containername }}")
            docker exec $phpContainerID su -c "/data/flow commandmigration:migrate" -s /bin/sh www-data
            if [ $? != 0 ]
            then
               exit 1
            fi
      - name: Build Elasticsearch Index (Classic)
        if: ${{ inputs.exec_elasticsearch_index }}
        uses: appleboy/ssh-action@c732d38392bd59adadcb5e688fb1f7f1d29c6951
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AVENCY_SSH_KEY }}
          timeout: 120s
          script: |
            phpContainerID=$(docker ps -aqf "name=${{ inputs.containername }}")
            docker exec $phpContainerID su -c "/data/flow nodeindex:build --workspace live" -s /bin/sh www-data
            if [ $? != 0 ]
            then
               exit 1
            fi
      - name: Build Elasticsearch Index (Queue)
        if: ${{ inputs.exec_elasticsearch_queue }}
        uses: appleboy/ssh-action@c732d38392bd59adadcb5e688fb1f7f1d29c6951
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AVENCY_SSH_KEY }}
          timeout: 120s
          script: |
            phpContainerID=$(docker ps -aqf "name=${{ inputs.containername }}")
            docker exec $phpContainerID su -c "/data/flow nodeindexqueue:build --workspace live" -s /bin/sh www-data
            if [ $? != 0 ]
            then
               exit 1
            fi
